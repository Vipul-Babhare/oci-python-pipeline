name: Launch OCI VM and Run Python

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Provision OCI VM and Run Code
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Install OCI CLI
      run: |
        curl -sL https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh | bash -s -- --accept-all-defaults
        echo "export PATH=$HOME/bin:$PATH" >> $GITHUB_ENV

    - name: Configure OCI CLI
      run: |
        mkdir -p ~/.oci
        echo "${{ secrets.OCI_PRIVATE_KEY }}" > ~/.oci/oci_api_key.pem
        chmod 600 ~/.oci/oci_api_key.pem
        cat <<EOF > ~/.oci/config
        [DEFAULT]
        user=${{ secrets.OCI_USER_OCID }}
        fingerprint=${{ secrets.OCI_FINGERPRINT }}
        key_file=~/.oci/oci_api_key.pem
        tenancy=${{ secrets.OCI_TENANCY_OCID }}
        region=${{ secrets.OCI_REGION }}
        EOF

    - name: Create Ubuntu VM on Oracle Cloud
      id: create_vm
      run: |
        INSTANCE_ID=$(oci compute instance launch \
          --availability-domain "$(oci iam availability-domain list --compartment-id ${{ secrets.OCI_COMPARTMENT_OCID }} --query "data[0].name" --raw-output)" \
          --compartment-id ${{ secrets.OCI_COMPARTMENT_OCID }} \
          --shape "VM.Standard.E2.1.Micro" \
          --display-name "github-actions-vm" \
          --subnet-id ${{ secrets.OCI_SUBNET_OCID }} \
          --image-id $(oci compute image list --compartment-id ${{ secrets.OCI_COMPARTMENT_OCID }} --query "data[?\"operating-system\"=='Canonical Ubuntu' && \"operating-system-version\"=='22.04'].id | [0]" --raw-output) \
          --assign-public-ip true \
          --wait-for-state RUNNING \
          --query "data.id" --raw-output)
        
        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

    - name: Wait and fetch Public IP
      run: |
        sleep 60  # Give the VM time to boot up
        PUBLIC_IP=$(oci compute instance list-vnics --instance-id $INSTANCE_ID --compartment-id ${{ secrets.OCI_COMPARTMENT_OCID }} --query "data[0].\"public-ip\"" --raw-output)
        echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

    - name: Copy and Run Python Script via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ env.PUBLIC_IP }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          sudo apt update && sudo apt install -y python3
          echo 'print("Hello from Oracle Cloud!")' > script.py
          python3 script.py > result.txt

    - name: Commit Output Back to Repo
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git pull origin main
        scp -o StrictHostKeyChecking=no -i ~/.oci/oci_api_key.pem ${{ secrets.USERNAME }}@${{ env.PUBLIC_IP }}:~/result.txt .
        git add result.txt
        git commit -m "Add result from OCI run"
        git push
